{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'OMICRON-PERSEI-8'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntypes                     = new ( require 'intertype' ).Intertype()\n{ isa\n  validate\n  declare\n  cast\n  size_of\n  last_of\n  type_of }               = types.export()\nMultimix                  = require 'multimix'\nMAIN                      = @\n\n#-----------------------------------------------------------------------------------------------------------\nclass Op8 extends Multimix\n\n  #---------------------------------------------------------------------------------------------------------\n  @defaults: Object.freeze { object_mode: true, }\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( settings ) ->\n    super()\n    @settings = { @constructor.defaults..., settings..., }\n    validate.boolean @settings.object_mode\n    @types    = types\n    @$        = @remit.bind @\n\n  #---------------------------------------------------------------------------------------------------------\n  remit: ( remitter ) ->\n    validate.callable remitter\n    switch arity = remitter.length\n      #.....................................................................................................\n      when 1\n        validate.function remitter\n        transform = ( chunk, encoding, done ) -> remitter chunk; @push chunk; done()\n      #.....................................................................................................\n      when 2\n        validate.function remitter\n        transform = ( chunk, encoding, done ) -> remitter chunk, ( send = ( d ) => @push d ); done()\n      #.....................................................................................................\n      when 3\n        debug '^2726^', remitter, remitter.length\n        validate.asyncfunction remitter\n        transform = ( chunk, encoding, done ) -> remitter chunk, ( send = ( d ) => @push d ), done\n      #.....................................................................................................\n      else\n        throw new Error \"^remit@4478^ expected function with 1 to 3 arguments, got one with #{arity}\"\n    #.......................................................................................................\n    return new ( require 'readable-stream' ).Transform { transform, objectMode: @settings.object_mode, }\n\n\n############################################################################################################\nmodule.exports = new Op8()\n\n"
  ]
}